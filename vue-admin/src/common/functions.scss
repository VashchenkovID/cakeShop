@use "sass:math";
@use "sass:meta";
@import "const.variables";

@function strip-unit($number) {
  @if meta.type-of($number) == "number" and not  math.is-unitless($number) {
    @return math.div($number, ($number * 0 + 1));
  }

  @return $number;
}

@function strip-units($number) {
  @return math.div($number, ($number * 0 + 1));
}

@function px-to-rem($px) {
  $rems: math.div($px, 16px) * 1rem;
  @return $rems;
}

@function rem-to-px($val, $rem: strip-units(16px)) {
  $val-unit: math.unit($val);

  @if $val-unit == "px" {
    @return $val;
  }

  @return (strip-units($val) * $rem) * 1px;
}

@function px2vw($px, $base-width: map-get($grid-breakpoints, xl)) {
  $factor: 1vw;

  @if ($px == auto or $px == initial or $px == none) {
    @return $px;
  } @else {
    $unit: math.unit($px);

    @if $unit == "rem" {
      $px: rem-to-px($px);
    }

    @return calc(
            (calc(strip-unit($px) / (strip-unit($base-width) / 100))) * $factor
    );
  }
}

@function px2rem($px) {
  @if ($px == auto or $px == initial or $px == none) {
    @return $px;
  } @else {
    @return (calc(strip-unit($px) / 10)) * 1rem;
  }
}
